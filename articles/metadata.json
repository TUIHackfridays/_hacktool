{"total":14,"articles":[{"id":1,"title":"Vagrant to the rescue","intro":"Anything that starts with a \"V\" is exciting, according to some. Ok, according to V.\n\nWe created a [V","created_by":"koenbetsens","created_at":"2016-11-04T07:55:06Z","filename":"koenbetsens_1478246106882.json","category":"Tool Belt","sha":"01720d84a3c1288ae9f8e9e2ae45df667aee211f"},{"id":2,"title":"Poppr VR goodness","intro":"Poppr is coming to Ostend!\nAfter an inspiring session in Enschede, we have an - albeit slightly more","created_by":"koenbetsens","created_at":"2016-11-04T07:59:52Z","filename":"koenbetsens_1478246393377.json","category":"Hackfridays","sha":"8cda2c2ca815c13a0a5719416332a6a7ee408401","content":"Poppr is coming to Ostend!\nAfter an inspiring session in Enschede, we have an - albeit slightly more compressed - sequel to spice up the kick-off.\n\nTo enrich the experience, use this URL to view the topical contents during the session:\n\n[poppr.hackfridays.com](http://poppr.hackfridays.com/)\n\n\nHappy hacking!"},{"id":3,"title":"Swagger Editor","intro":"Oh goodness, a Swagger Editor\n[http://editor.swagger.io/#/](http://editor.swagger.io/#/)\n\n\nMore info","created_by":"koenbetsens","created_at":"2016-11-25T12:33:00Z","filename":"koenbetsens_1480077183777.json","category":"Tool Belt","sha":"ba1f6c04df3303b42eb3ddcc68df7976c39ff213","content":"Oh goodness, a Swagger Editor\n[http://editor.swagger.io/#/](http://editor.swagger.io/#/)\n\n\nMore information on example objects in the response:\n* [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#response-object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#response-object)\n* [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#exampleObject](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#exampleObject)"},{"id":4,"title":"TUIse API","intro":"She's alive!\nThe TUIse restful API, based on the openapi standard, can be found here:\n\n**[http://api","created_by":"koenbetsens","created_at":"2016-11-25T14:13:28Z","filename":"koenbetsens_1480083212507.json","category":"Hackfridays","sha":"430db2436332fd6b1ec21017bd72c16f250b71ac"},{"id":5,"title":"TUI Bots","intro":"Aw yeah.\nWe will be building Arduino Based Allbots.\n\nHere's the guide: [manuals.velleman.eu/article.","created_by":"koenbetsens","created_at":"2016-12-08T20:53:52Z","filename":"koenbetsens_1481230431808.json","category":"Hackfridays","sha":"48f12baf3fd66425568e8503c36f17f987ffdb65"},{"id":6,"title":"Pozyx (16 december)","intro":"This session we'll have a cool workshop by Pozyx, a Belgian-based startup with a groundbreaking new ","created_by":"rudolfvanderven","created_at":"2016-12-15T18:06:34Z","filename":"rudolfvanderven_1481825194017.json","category":"Hackfridays","hidden":true,"sha":"687e35791e496f8cb14c5ddc7574588efb2d56a2","content":"This session we'll have a cool workshop by Pozyx, a Belgian-based startup with a groundbreaking new accuracy positioning system!\n\nMore information: https://www.pozyx.io/"},{"id":7,"title":"Jarv.. - uh - Tuise goodness!","intro":"GIT: https://github.com/TUIHackfridays/tuise-bot","created_by":"rudolfvanderven","created_at":"2017-01-06T11:53:35Z","filename":"rudolfvanderven_1483703614626.json","category":"Hackfridays","hidden":false,"sha":"4f22e1db9c29a47a40bb299468ff19ad7d9cc2bf"},{"id":8,"title":"IFTTT session","intro":"In this session we're taking Tuise to the next level! We'll be connecting her to IFTTT, starting off","created_by":"rudolfvanderven","created_at":"2017-01-20T07:53:21Z","filename":"rudolfvanderven_1484898800961.json","category":"Hackfridays","hidden":true,"sha":"3f837fc29b58b92e7388f959bf5c1640816f736c"},{"id":9,"title":"Prototyping!","intro":"Straightforward manual to get Tuise up and running:\n\ncd /home/pi\nwget https://github.com/TUIHackfrid","created_by":"rudolfvanderven","created_at":"2017-03-10T11:58:05Z","filename":"rudolfvanderven_1489147084695.json","category":"Hackfridays","hidden":false,"sha":"2cbcbb6d709ae802ae80d4d1a033df3c8b235bb5"},{"id":10,"title":"Mobile React Native","intro":"Getting started with React: [https://facebook.github.io/react-native/docs/getting-started.html#conte","created_by":"rudolfvanderven","created_at":"2017-05-19T10:41:37Z","filename":"rudolfvanderven_1495190497696.json","category":"Hackfridays","hidden":false,"sha":"98efd89b790da3c4362595afd5789cbeafb011d7","content":"Getting started with React: [https://facebook.github.io/react-native/docs/getting-started.html#content](https://facebook.github.io/react-native/docs/getting-started.html#content)\n\nBoilerplate readme: [https://github.com/Cloudoki/react-native-boilerplate/blob/master/README.md](https://github.com/Cloudoki/react-native-boilerplate/blob/master/README.md)\n\n2pack-list repo: [https://github.com/Cloudoki/2pack-list/](https://github.com/Cloudoki/2pack-list/)\n\n\n\n"},{"id":12,"title":"Tuise Lesson one - How to clean install my RPi","intro":"So you took your RPi home and embarked an heroic attempt to automate the grain flow on your chicken'","created_by":"koenbetsens","created_at":"2017-06-07T13:54:02Z","filename":"koenbetsens_1496843642579.json","category":"Hackfridays","hidden":false,"sha":"1593d5c8131f570a616a147fbce9c9082148f887","content":"So you took your RPi home and embarked an heroic attempt to automate the grain flow on your chicken's den? We've all been there.\nAccidently cluttered the RPi with complete nonsense you're ashamed of now? We've got t-shirts.\n\nThere's always a **clean install** to the rescue.\n\n### Step 1.\nBuy a 8GB, 16GB or higher micro SD card and SD card shield. \nLike this one: [https://www.gotron.be/huis-tuin/computer-toebehoren/geheugen/transcend-micro-sdhc-geheugenkaart-16gb-klasse-10.html](https://www.gotron.be/huis-tuin/computer-toebehoren/geheugen/transcend-micro-sdhc-geheugenkaart-16gb-klasse-10.html) \n\n\n### Step 2.\nAssuming you have a computer with a SD card reader, we'll now flash the SD.\n\n##### Raspbian\nDownload the +- 1,5GB Raspbian Jessie image.\nThere you go: [https://www.raspberrypi.org/downloads/raspbian/](https://www.raspberrypi.org/downloads/raspbian/) - you'll want the Pixel flavour.\n\n##### Etcher\nBy far the easiest way to Flash that disk is called Esher.\nDownload it here: [https://etcher.io/](https://etcher.io/)\n\nOnce Etcher is installed, you'll be able to select both the zip (you can leave it compressed) and the destination SD. \nDepending on your SD spec & brand, the flash process takes about 6 minutes.\n\n![Etcher](https://etcher.io/static/screenshot-1x.gif)\n\n\n### Step 3.\nTime to boot and update.\nInsert your Micro SD in the RPi (teeth up). Connect power & be proud of what you just realised.\nIt's a common practice to update before we finish off.\n\nOpen your CLI terminal and run the follwing 2 commands:\n\n```sudo apt-get update```\n\n```sudo apt-get dist-upgrade```\n\nThere you go.\n"},{"id":13,"title":"Tuise Lesson two - How to install dependencies on my RPi","intro":"In order to get **Tuise** up and running, we'll be installing a set of apps and components on our RP","created_by":"koenbetsens","created_at":"2017-06-07T14:42:35Z","filename":"koenbetsens_1496846555703.json","category":"Hackfridays","hidden":false,"sha":"a23113693e89102837ca89a89076631a6f400da2","content":"In order to get **Tuise** up and running, we'll be installing a set of apps and components on our RPi, so it has the ability to run independent.\nSince we want to prepare well, we're going to focus on the dependencies first, like we'd go grocery shopping before we cook.\n\n####The Raspbian OS.\nIn [Tuise Lesson one - How to clean install my RPi.](http://tuihackfridays.com/#article/12), we flashed a Micro SD with the Raspbian OS.\nIn case you've done this a while ago, or work with the legacy SD card, make sure you update. Make sure your wifi is enabled (right hand side menu icon).\n\nOpen your CLI terminal and run the follwing 2 commands:\n\n```sudo apt-get update```\n\n```sudo apt-get dist-upgrade```\n\n## Server\nWe'll be running the eventual Tuise app on a local server. Easy enough, our interfacing is built on React and Redux, which offers most of this through Webpack, which is all we need for a POC.\n\nLet's install the dependencies, Node is what we need:\n\n```sudo apt-get install nodejs npm```\n\n```npm install react redux yarn```\n\n\n## Browser\nTo visualise the interface, we'll be using a browser in Kiosk mode. The perfect excuse to dust of some old Firefox love.\nFirefox on Raspbian will do the trick, but you're of course free to pull this off with Chromium as well.\n\n#### Firefox\nFirst install the iceweasel (Firefox on Raspbian):\n\n```sudo apt-get install iceweasel --no-install-recommends```\n\nThe `--no-install-recommends` keeps the clutter away.\n\n#### Kiosk mode\nTo enable Kiosk mode, we only have to download a **Firefox add-on** to help us out. We'll enable it in a later phase, but let's get it ready straight away.\n\n* Go to the Raspbian menu, navigate to Internet, and click **Firefox ESR**\n* In Firefox, open the menu on the right-hand side and click the Add-ons icon\n* Search for \"RKiosk\", the add-on we'll be using today\n* Click install, and leave it there for a bit\n\nWe'll get back to Firefox in a bit.\n\n\n"},{"id":14,"title":"Tuise Lesson three - Installing and running Tuise","intro":"**Tuise** needs a vsiual interface, in this post we'll be installing exactly that.\n\n#### Preface\nBei","created_by":"koenbetsens","created_at":"2017-06-08T07:48:43Z","filename":"koenbetsens_1496908123702.json","category":"Hackfridays","hidden":false,"sha":"e815479fa9a0e1450b3c98b7efcc2485923fadb3","content":"**Tuise** needs a vsiual interface, in this post we'll be installing exactly that.\n\n#### Preface\nBeing all fancy, like we are, the interface will be based on React. However, it is important to note that we don't use the [2pack-list repo](https://github.com/Cloudoki/2pack-list) from the [Mobile React Native](http://tuihackfridays.com/#article/10) for this. \nThe reason is simple, React Native is wonderful for Android/iOS, but quite useless for a web browser.\n\n_Make sure you installed the dependencies for your RPi as described in [Tuise Lesson two - How to install dependencies on my RPi]http://tuihackfridays.com/#article/13)._\n\n\n## Step 1\n\nIn order to start with a good base, we'll use our own React Boilerplate.\n\n### React/Redux Donderstarter\nThis boilerplate is designed to get you up and running with React/Router/Redux/Sagas workflow, backed up by webpack and unit testing with jest/enzyme.\nThe primary goal of this boilerplate is to provide a stable foundation upon which to build modern web applications.\n\n#### Option a: from scratch\nFor reference, these are the steps we took to build the tuise interface, feel free to experiment with this process yourself. For the below process to work, first [create a new repo](https://help.github.com/articles/creating-a-new-repository/) in Github.\nHowever, skip this step if you only want to the end result.\n\n```git clone --bare https://github.com/Cloudoki/react-redux-donderstarter.git boilerplate```\n\n```cd boilerplate```\n\n```git push --mirror https://github.com/TUIHackfridays/tuise-poc.git```\n\n\n\n#### Option b: clone _(choose this one)_\nOf course, it has limited use to all work on different repositories, that's why you can simply collect the one we've pre-built:\n\n``` cd ~/ ``` (or your preferred working directory)\n\n```git clone https://github.com/TUIHackfridays/tuise-poc.git tuise-poc```\n\n```cd tuise-poc```\n\n```npm install```\n\n```npm run dev```\n\nHot reloading is enabled by default for both **JavaScript** and **SCSS** files.\n\n\nWe're currently actively building the repo for **Step 1**, hold on."},{"id":11,"title":"Fitting the TUIse jigsaw - introduction","intro":"This week, we'll be bringing together the pieces of the TUIse sessions we had during the season.\nFor","created_by":"koenbetsens","created_at":"2017-06-07T13:21:25Z","filename":"koenbetsens_1496841685319.json","category":"Hackfridays","hidden":false,"sha":"b6e275c706d2aec2dfdd96f5347069eb97d23a49","content":"This week, we'll be bringing together the pieces of the TUIse sessions we had during the season.\nFor this, we'll be going through the time-line in reverse order.\n\nThe ultimate goal is to have a working TUIse prototype assembled and working by **June 30th 2017**.\nIn order to leave nobody behind, we are writing this step-by-step guide:\n\n* Lesson one:   [How to clean install my RPi.](http://tuihackfridays.com/#article/12)\n* Lesson two:   [How to install all dependencies on my RPi.](http://tuihackfridays.com/#article/13)\n* Lesson three: [Installing and running Tuise](http://http://tuihackfridays.com/#article/14).\n* Lesson four:   Implementing the TUIse components.\n* Lesson five:    Add the hardware and bring TUIse alive.\n* Lesson six:     Dress her up - casing example _(send in your proposal before the 16th)_\n\n.\n_Disclaimer: we are writing down the lessons as we speak, bear with us_\n\n.\n\n\n.\n\n![RPi](https://www.raspberrypi.org/app/uploads/2015/08/raspberry-pi-logo.png)"}]}